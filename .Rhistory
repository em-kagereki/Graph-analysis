match (n1:Gene)--(n2:Pathway)
where n1.name in GenesAssociatedWithDisease
with n1, collect(id(n2)) as Pathway1, GenesAssociatedWithDisease
match (n3:Gene)--(n4:Pathway)
where not n3.name in GenesAssociatedWithDisease
with n1, Pathway1, n3, collect(id(n4)) as Pathway2
return n1.name, n3.name, gds.alpha.similarity.jaccard(Pathway1, Pathway2) as similarity
order by similarity desc;'
jarc<-call_neo4j(jarc,connect)
jarc
jarc<-'match (g:Gene)--(:Disease)
with collect(g.name) as GenesAssociatedWithDisease
match (n1:Gene)--(n2:Pathway)
where n1.name in GenesAssociatedWithDisease
with n1, collect(id(n2)) as Pathway1, GenesAssociatedWithDisease
match (n3:Gene)--(n4:Pathway)
where not n3.name in GenesAssociatedWithDisease
with n1, Pathway1, n3, collect(id(n4)) as Pathway2
return n1.name, n3.name, gds.alpha.similarity.jaccard(Pathway1, Pathway2) as similarity
order by similarity desc;'
jarc<-call_neo4j(jarc,connect)
jarc
jarc<-call_neo4j(jarc,connect)
jarc
jarc2<-cbind(jarc2$n1.name,jarc2$n3.name,jarc2$similarity)
jarc<-cbind(jarc$n1.name,jarc$n3.name,jarc$similarity)
head(jarc)
jarc2<-'match (g:Gene)--(:Disease)
with collect(g.name) as GenesAssociatedWithDisease
match (n1:Gene)--(n2:BiologicalProcess)
where n1.name in GenesAssociatedWithDisease
with n1, collect(id(n2)) as BiologicalProcess1, GenesAssociatedWithDisease
match (n3:Gene)--(n4:BiologicalProcess)
where not n3.name in GenesAssociatedWithDisease
with n1, BiologicalProcess1, n3, collect(id(n4)) as BiologicalProcess2
return n1.name, n3.name, gds.alpha.similarity.jaccard(BiologicalProcess1, BiologicalProcess2) as similarity
order by similarity desc;'
jarc2<-call_neo4j(jarc2,connect)
jarc2<-cbind(jarc2$n1.name,jarc2$n3.name,jarc2$similarity)
jarc2<-call_neo4j(jarc2,connect)
gc()
jarc2<-cbind(jarc2$n1.name,jarc2$n3.name,jarc2$similarity)
jarc2<-'match (g:Gene)--(:Disease)
with collect(g.name) as GenesAssociatedWithDisease
match (n1:Gene)--(n2:BiologicalProcess)
where n1.name in GenesAssociatedWithDisease
with n1, collect(id(n2)) as BiologicalProcess1, GenesAssociatedWithDisease
match (n3:Gene)--(n4:BiologicalProcess)
where not n3.name in GenesAssociatedWithDisease
with n1, BiologicalProcess1, n3, collect(id(n4)) as BiologicalProcess2
return n1.name, n3.name, gds.alpha.similarity.jaccard(BiologicalProcess1, BiologicalProcess2) as similarity
order by similarity desc;'
jarc2<-call_neo4j(jarc2,connect)
gc()
gc()
install.packages("rjson")
library("rjson")
json_file <- "C:/Users/Admin/Downloadscc.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
library("rjson")
json_file <- "C:/Users/Admin/Downloads/cc.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
library("rjson")
json_file <- "C:/Users/Admin/Downloads/cc2.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
library("rjson")
json_file <- "C:/Users/Admin/Downloads/cc2.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
fp <- file.path("C:/Users/Admin/Downloads/cc3.txt")
json_data <- fromJSON(file = fp)
View(json_data)
json_data[[3]]
json_data[[11]]
json_data[[85]]
json_data[[300]]
class(json_data)
data<-do.call(rbind.data.frame, json_data)
df <- data.frame(matrix(unlist(json_data), nrow=132, byrow=TRUE),stringsAsFactors=FALSE)
df <- data.frame(matrix(unlist(json_data), nrow=3591, byrow=TRUE),stringsAsFactors=FALSE)
View(df)
df <- data.frame(matrix(unlist(json_data), nrow=3591, byrow=FALSE),stringsAsFactors=FALSE)
View(df)
library (plyr)
d <- ldply (json_data, data.frame)
View(d)
df <- data.frame(matrix(unlist(json_data), nrow=3591, byrow=FALSE),stringsAsFactors=FALSE)
View(df)
fp <- file.path("C:/Users/Admin/Downloads/cd.txt")
json_data <- fromJSON(file = fp)
data<-do.call(rbind.data.frame, json_data)
fp <- file.path("C:/Users/Admin/Downloads/cd.txt")
json_data <- fromJSON(file = fp)
fp <- file.path("C:/Users/Admin/Downloads/cc3.txt")
json_data <- fromJSON(file = fp)
data<-do.call(rbind.data.frame, json_data)
fp <- file.path("C:/Users/Admin/Downloads/cd.txt")
json_data <- fromJSON(file = fp)
d <- ldply (json_data, data.frame)
View(d)
fp <- file.path("C:/Users/Admin/Downloads/pizza.txt")
json_data <- fromJSON(file = fp)
d <- ldply (json_data, data.frame)
View(d)
fp <- file.path("C:/Users/Admin/Downloads/cc3.txt")
json_data <- fromJSON(file = fp)
data<-do.call(rbind.data.frame, json_data)
df <- data.frame(matrix(unlist(json_data), nrow=3591, byrow=FALSE),stringsAsFactors=FALSE)
library (plyr)
d <- ldply (json_data, data.frame)
View(d)
View(d)
fp <- file.path("C:/Users/Admin/Downloads/part.txt")
json_data <- fromJSON(file = fp)
data<-do.call(rbind.data.frame, json_data)
d <- ldply (json_data, data.frame)
View(d)
shiny::runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp()
runApp()
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
runApp('App/Nutrient_Calculator-master')
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
## Graph statistics
basicStats<- read.csv("Data/basicStats.csv")
Stats<-read.csv("Data/Stats.csv")
schema <- read.csv("Data/metadata.csv")
#schema
schema<- rename(schema, Triples = Number.of.triples)
remotes::install_github("jhelvy/xaringanBuilder")
library(xaringanBuilder)
build_pdf("Report.Rmd")
remotes::install_github('rstudio/chromote')
build_pdf("Report.Rmd")
build_pdf("Report.Rmd")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment = NA)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
## Graph statistics
basicStats<- read.csv("Data/basicStats.csv")
Stats<-read.csv("Data/Stats.csv")
schema <- read.csv("Data/metadata.csv")
#schema
schema<- rename(schema, Triples = "Number.of.triples")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd")
pagedown::chrome_print("Report.html",output="Report.pdf")
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
browser="google-chrome-stable"
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd")
build_html("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html")
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html", complex_slides = TRUE)
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd", complex_slides = TRUE)
library(chromote)
b <- ChromoteSession$new()
b
build_pdf("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd", complex_slides = TRUE)
build_pdf(input = "Report.html",
output_file = "Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",
output_file = "Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
library(xaringanBuilder)
setwd("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/")
build_pdf("Report.Rmd")
library(xaringanBuilder)
setwd("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/")
build_pdf("Report.Rmd")
#build_pdf("Report.html")
library(xaringanBuilder)
setwd("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/")
build_pdf("Report.Rmd")
#build_pdf("Report.html")
warnings()
#build_pdf("Report.Rmd")
build_pdf("Report.html")
pagedown::chrome_print("Report.html",output="test.pdf")
pagedown::chrome_print("test.html",output="test.pdf")
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="test.pdf")
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
warnings()
library(extrafont)
loadfonts(device = "win")
warnings()
suppressWarnings()
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
Chromote$get_browser()
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="test.pdf")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(comment = NA)
knitr::opts_chunk$set(warning =FALSE)
knitr::opts_chunk$set(error =FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(ggplot2)
library(ggtext)
library(dplyr)
centralMerge<- read.csv("Data/centrality.csv")
centralMerge$centrality<-scales::rescale(centralMerge$centrality)
centralMerge2<-centralMerge %>%
mutate(rank = dense_rank(centrality)) %>%
head(5)
centralMerge2<-centralMerge %>%
group_by(Category) %>%
mutate(rank = dense_rank(centrality))
#paste0(centralMerge2$name, collapse=",")
#head(centralMerge2)
topCen<- centralMerge %>%
filter(Category=="Gene") %>%
filter(centralPercent==100) %>%
mutate(name2=name) %>%
select(name,name2)
centralMerge<-merge(centralMerge,topCen, by="name",all.x = TRUE)
library(ggtext)
library(ggrepel)
ggplot(centralMerge, aes(x = factor(1), y = centrality)) +
geom_boxplot(width = 0.9, fill = "white") +
geom_jitter(aes(color = Category, shape = Category),
width = 0.4, size = 2) +
labs(x = NULL)+
theme_classic()+
labs(
title = "<b style = 'color:#1381B0; font-size:32px';>Centrality Measure</b><br>
<span style = 'font-size:10pt'>The top ten most connected genes are labeled</span>",
x = "All points",
y = "Centrality (scale (0-1)</span>"
)+
geom_text_repel(
aes(label = name2),
size = 3,
force        = 0.7,
nudge_x      = 0.5,
direction    = "y",
hjust        = 1.3,
segment.size = 0.2,max.overlaps = Inf
#  box.padding = unit(0.4, "lines"),
#  point.padding = unit(0.1, "lines")
)+
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0)
# fill = "cornsilk"
),
axis.title.x = element_textbox_simple(
width = NULL,
padding = margin(4, 4, 4, 4),
margin = margin(4, 0, 0, 0),
linetype = 1,
r = grid::unit(8, "pt")
# fill = "azure1"
),
axis.title.y = element_textbox_simple(
hjust = 0,
orientation = "left-rotated",
minwidth = unit(1, "in"),
maxwidth = unit(2, "in"),
padding = margin(4, 4, 2, 4),
margin = margin(0, 0, 2, 0)
#fill = "lightsteelblue1"
))
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pdf(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
library(ggplot2)
library(ggtext)
library(dplyr)
centralMerge<- read.csv("Data/centrality.csv")
centralMerge$centrality<-scales::rescale(centralMerge$centrality)
centralMerge2<-centralMerge %>%
mutate(rank = dense_rank(centrality)) %>%
head(5)
centralMerge2<-centralMerge %>%
group_by(Category) %>%
mutate(rank = dense_rank(centrality))
#paste0(centralMerge2$name, collapse=",")
#head(centralMerge2)
topCen<- centralMerge %>%
filter(Category=="Gene") %>%
filter(centralPercent==100) %>%
mutate(name2=name) %>%
select(name,name2)
centralMerge<-merge(centralMerge,topCen, by="name",all.x = TRUE)
library(ggtext)
library(ggrepel)
ggplot(centralMerge, aes(x = factor(1), y = centrality)) +
geom_boxplot(width = 0.9, fill = "white") +
geom_jitter(aes(color = Category, shape = Category),
width = 0.4, size = 2) +
labs(x = NULL)+
theme_classic()+
labs(
title = "<b style = 'color:#1381B0; font-size:32px';>Centrality Measure</b><br>
<span style = 'font-size:10pt'>The top ten most connected genes are labeled</span>",
x = "All points",
y = "Centrality (scale (0-1)</span>"
)+
geom_text_repel(
aes(label = name2),
size = 3,
force        = 0.7,
nudge_x      = 0.5,
direction    = "y",
hjust        = 1.3,
segment.size = 0.2,max.overlaps = Inf
#  box.padding = unit(0.4, "lines"),
#  point.padding = unit(0.1, "lines")
)+
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0)
# fill = "cornsilk"
),
axis.title.x = element_textbox_simple(
width = NULL,
padding = margin(4, 4, 4, 4),
margin = margin(4, 0, 0, 0),
linetype = 1,
r = grid::unit(8, "pt")
# fill = "azure1"
),
axis.title.y = element_textbox_simple(
hjust = 0,
orientation = "left-rotated",
minwidth = unit(1, "in"),
maxwidth = unit(2, "in"),
padding = margin(4, 4, 2, 4),
margin = margin(0, 0, 2, 0)
#fill = "lightsteelblue1"
))
library(ggplot2)
library(ggtext)
library(dplyr)
centralMerge<- read.csv("Data/centrality.csv")
centralMerge$centrality<-scales::rescale(centralMerge$centrality)
centralMerge2<-centralMerge %>%
mutate(rank = dense_rank(centrality)) %>%
head(5)
centralMerge2<-centralMerge %>%
group_by(Category) %>%
mutate(rank = dense_rank(centrality))
#paste0(centralMerge2$name, collapse=",")
#head(centralMerge2)
topCen<- centralMerge %>%
filter(Category=="Gene") %>%
filter(centralPercent==100) %>%
mutate(name2=name) %>%
select(name,name2)
centralMerge<-merge(centralMerge,topCen, by="name",all.x = TRUE)
library(ggtext)
library(ggrepel)
ggplot(centralMerge, aes(x = factor(1), y = centrality)) +
geom_boxplot(width = 0.9, fill = "white") +
geom_jitter(aes(color = Category, shape = Category),
width = 0.4, size = 2) +
labs(x = NULL)+
theme_classic()+
labs(
title = "<b style = 'color:#1381B0; font-size:32px';>Centrality Measure</b><br>
<span style = 'font-size:10pt'>The top ten most connected genes are labeled</span>",
x = "All points",
y = "Centrality (scale (0-1)</span>"
)+
geom_text_repel(
aes(label = name2),
size = 3,
force        = 0.7,
nudge_x      = 0.5,
direction    = "y",
hjust        = 1.3,
segment.size = 0.2,max.overlaps = Inf
#  box.padding = unit(0.4, "lines"),
#  point.padding = unit(0.1, "lines")
)+
theme(
plot.title.position = "plot",
plot.title = element_textbox_simple(
size = 13,
lineheight = 1,
padding = margin(5.5, 5.5, 5.5, 5.5),
margin = margin(0, 0, 5.5, 0)
# fill = "cornsilk"
),
axis.title.x = element_textbox_simple(
width = NULL,
padding = margin(4, 4, 4, 4),
margin = margin(4, 0, 0, 0),
linetype = 1,
r = grid::unit(8, "pt")
# fill = "azure1"
),
axis.title.y = element_textbox_simple(
hjust = 0,
orientation = "left-rotated",
minwidth = unit(1, "in"),
maxwidth = unit(2, "in"),
padding = margin(4, 4, 2, 4),
margin = margin(0, 0, 2, 0)
#fill = "lightsteelblue1"
))
build_pptx(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pdf",
complex_slides = TRUE,
partial_slides = TRUE)
build_pptx(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pptx",
complex_slides = TRUE,
partial_slides = TRUE)
build_pptx(input = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.Rmd",
output_file = "C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.pptx",
complex_slides = TRUE,
partial_slides = TRUE)
pagedown::chrome_print("C:/Users/Admin/Documents/KM - Winter 2022/tutorial/B00867154/Report.html",output="Report.pdf")
shiny::runApp('~/App/Artifacts standardization')
